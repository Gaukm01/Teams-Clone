{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playInline","muted","ref","autoplay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76b98e07.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\nimport  { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\n//const socket = io('http://localhost:5000');\nconst socket = io('https://video-chat-app-gk.herokuapp.com/');\n\nconst ContextProvider = ({ children }) => {\n    const [stream, setStream] = useState();\n    const [me, setMe] = useState('');\n    const [call, setCall] = useState({});\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [name, setName] = useState('');\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(() => {\n        /* for asking video and audio permision*/\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n            .then((currentStream) => {\n                setStream(currentStream);\n\n                myVideo.current.srcObject = currentStream;\n            });\n        \n        socket.on('me', (id) => setMe(id));\n\n        socket.on('callUser', ( {from, name: callerName, signal }) => {\n            setCall({isReceivingCall:true, from, name: callerName, signal})\n        });\n    }, []);\n\n    /*different fucntions of our video call app*/\n    const answerCall = () => {\n        /*call acepted */\n        setCallAccepted(true);\n\n        const peer = new Peer({ initiator:false, trickle: false, stream });\n\n        peer.on('signal', (data) =>{\n            socket.emit('answerCall', {signal:data, to: call.from });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        peer.signal(call.signal);\n\n        connectionRef.current = peer; // to use peer for connection\n    };\n\n    const callUser = (id) => {\n\n        const peer = new Peer({ initiator:true, trickle: false, stream });\n\n        peer.on('signal', (data) => {\n            socket.emit('callUser', {userToCall: id, signalData: data, from: me, name });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        socket.on('callAccepted', (signal) => {\n            setCallAccepted(true);\n\n            peer.signal(signal);\n        });\n\n        connectionRef.current = peer; \n    };\n\n    const leaveCall = () => {\n        setCallEnded(true);\n\n        connectionRef.current.destroy();\n\n        window.location.reload();\n    };\n\n    return (\n        // return all the components including functions and const defined.\n        <SocketContext.Provider value= {{\n            call,\n            callAccepted,\n            userVideo,\n            myVideo,\n            name,\n            stream,\n            me,\n            callEnded,\n            setName,\n            callUser,\n            leaveCall,\n            answerCall,\n        }}\n        >\n\n            {children}\n        </SocketContext.Provider>\n    );\n};\n\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from '../SocketContext';\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n      width: '550px',\n      [theme.breakpoints.down('xs')]: {\n        width: '300px',\n      },\n    },\n    gridContainer: {\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n      },\n    },\n    paper: {\n      padding: '10px',\n      border: '2px solid black',\n      margin: '10px',\n    },\n}));  \n\nconst VideoPlayer = () =>{\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n    const classes = useStyles();\n    return ( \n        <Grid container className={classes.gridContainer}>\n            {/*our own video, if stream is available then show the our video */}\n            {stream && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant='h5' gutterBottom>{name || \"Name\"}</Typography>\n                        <video playInline muted ref={myVideo} autoplay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n            \n            {/*User's video , if call is Accepted and not ended show user video*/}\n            {callAccepted && !callEnded && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant='h5' gutterBottom>{call.name || \"Name\"}</Typography>\n                        <video playInline ref={userVideo} autoplay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n            \n        </Grid>\n        \n    );\n    \n}\n\nexport default VideoPlayer;","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport { SocketContext } from '../SocketContext';\n\n\nconst Notifications = () =>{\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n    \n    return ( \n        <>\n            {call.isReceivingCall && !callAccepted && (\n                /* when receiving call and not accepted yet then notification will appear to accept call */\n                <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <h1>{call.name} is Calling: </h1>\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall} >\n                        Answer\n                    </Button>\n\n                </div>\n            )}\n\n        </>\n    );\n    \n};\n\nexport default Notifications;","import React, { useState, useContext } from 'react';\nimport { Button, TextField , Grid, Typography, Container, Paper} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\n\nimport { SocketContext } from '../SocketContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    gridContainer: {\n      width: '100%',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n      },\n    },\n    container: {\n      width: '600px',\n      margin: '35px 0',\n      padding: 0,\n      [theme.breakpoints.down('xs')]: {\n        width: '80%',\n      },\n    },\n    margin: {\n      marginTop: 20,\n    },\n    padding: {\n      padding: 20,\n    },\n    paper: {\n      padding: '10px 20px',\n      border: '2px solid black',\n    },\n}));\n\nconst Options = ({ children }) =>{\n    const { me, callAccepted, name, setName, leaveCall, callEnded, callUser } = useContext(SocketContext);\n    const [idToCall, setIdToCall] = useState('');\n    const classes = useStyles();\n    return ( \n        <Container className={classes.container}>\n            <Paper elevation={10} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <Grid container className={classes.gridContainer}>\n                        {/* Button for copying our ID */}\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Account Info </Typography>\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n                            <CopyToClipboard text={me} className={classes.margin}>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}> \n                                    Copy Your ID\n                                </Button>\n                            </CopyToClipboard>\n                        </Grid>\n                        {/*Button to make a Call*/}\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Make a call </Typography>\n                            <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n                            {/* based on call is going on or not different buttons */}\n                            {callAccepted && !callEnded ? (\n                                /*if call is going on then a button to Hang Up */\n                                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}> \n                                    Hang Up\n                                </Button>\n                            ) : (\n                                /*if no call is going on then a button to make call */\n                                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}> \n                                    Call\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </form>\n                {children}\n\n            </Paper>\n        </Container>\n    );\n    \n}\n\nexport default Options;","import React from 'react';\nimport { Typography, AppBar } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport VideoPlayer from './components/VideoPlayer';\nimport Notifications from './components/Notifications';\nimport Options from './components/Options';\n\nconst useStyles = makeStyles((theme) =>({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 100px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '600px',\n        border: '2px solid black',\n    \n        [theme.breakpoints.down('xs')]: {\n          width: '90%',\n        },\n      },\n      \n    wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n    },\n}))\n\nconst App = () =>{\n    const classes = useStyles();\n    return ( \n        <div className={classes.wrapper}>\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                <Typography variant=\"h2\" align=\"center\">Video Chat</Typography>\n            </AppBar>\n\n            <VideoPlayer />\n            \n            <Options>\n                <Notifications />\n            </Options>\n        </div>\n    );\n    \n}\n\nexport default App;","import react from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './SocketContext';\nimport './styles.css';\n\nReactDOM.render(\n    <ContextProvider>\n        <App />\n    </ContextProvider>,\n\n    document.getElementById('root'),\n);"],"sourceRoot":""}